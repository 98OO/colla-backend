spring:
  profiles:
    default: local  # local을 기본 프로필로 설정

  application:
    name:
      colla-backend

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/colla?allowPublicKeyRetrieval=true&useSSL=false
    username: user
    password: abcd1234@

  data.redis:
    host: localhost
    port: 6379
    password: abcd1234@

  jpa:
    #hibernate setting
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        #system.out
        show_sql: true
        #format pretty
        format_sql: true
    open-in-view: false

  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    admin-email: ${MAIL_ADMIN_EMAIL}

  oauth:
    google:
      client-id: ${GOOGLE_CLIENT_ID}
      client-secret: ${GOOGLE_CLIENT_SECRET}
      end-point: https://accounts.google.com/o/oauth2/v2/auth
      response-type: code
      access-type: ${GOOGLE_ACCESS_TYPE}
      scopes: ${GOOGLE_SCOPE}
      token-uri: https://oauth2.googleapis.com/token
      redirect-uri: ${GOOGLE_REDIRECT_URI}
    kakao:
      client-id: ${KAKAO_CLIENT_ID}
      client-secret: ${KAKAO_CLIENT_SECRET}
      end-point: https://kauth.kakao.com/oauth/authorize
      response-type: code
      access-type: ${KAKAO_ACCESS_TYPE}
      scopes: ${KAKAO_SCOPE}
      token-uri: https://kauth.kakao.com/oauth/token
      redirect-uri: ${KAKAO_REDIRECT_URI}
    naver:
      client-id: ${NAVER_CLIENT_ID}
      client-secret: ${NAVER_CLIENT_SECRET}
      end-point: https://nid.naver.com/oauth2.0/authorize
      response-type: code
      access-type: ${NAVER_ACCESS_TYPE}
      scopes: ${NAVER_SCOPE}
      token-uri: https://nid.naver.com/oauth2.0/token
      redirect-uri: ${NAVER_REDIRECT_URI}

springdoc:
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8
  swagger-ui:
    url: /docs/open-api-3.0.1.yaml
    path: /swagger

jwt:
  secret-key:
    access-token: collaAccessAccessAccessTokenSecretKeyForCollaSystem
    refresh-token: collaRefreshRefreshRefreshTokenSecretKeyForCollaSystem
  expiration-time:
    # milliseconds 단위
    access-token: 1_800_000 # 30m (30 * 60 * 1000)
    refresh-token: 604_800_000 # 7d (7 * 24 * 60 * 60 * 1000)

cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY_ID}
      secret-key: ${AWS_SECRET_ACCESS_KEY}
    s3:
      endpoint: ${AWS_S3_END_POINT}
      bucket: ${AWS_SECRET_S3_BUCKET}
    region:
      static: ${AWS_SECRET_REGION_STATIC}
    stack:
      auto: false

---
spring:
  config:
    activate:
      on-profile: prod
  application:
    name:
      colla-backend

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  data.redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
    password: ${REDIS_PASSWORD}

  jpa:
    #hibernate setting
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        show_sql: true
        format_sql: true
    open-in-view: false

  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    admin-email: ${MAIL_ADMIN_EMAIL}

  oauth:
    google:
      client-id: ${GOOGLE_CLIENT_ID}
      client-secret: ${GOOGLE_CLIENT_SECRET}
      end-point: https://accounts.google.com/o/oauth2/v2/auth
      response-type: code
      access-type: ${GOOGLE_ACCESS_TYPE}
      scopes: ${GOOGLE_SCOPE}
      token-uri: https://oauth2.googleapis.com/token
      redirect-uri: ${GOOGLE_REDIRECT_URI}
    kakao:
      client-id: ${KAKAO_CLIENT_ID}
      client-secret: ${KAKAO_CLIENT_SECRET}
      end-point: https://kauth.kakao.com/oauth/authorize
      response-type: code
      access-type: ${KAKAO_ACCESS_TYPE}
      scopes: ${KAKAO_SCOPE}
      token-uri: https://kauth.kakao.com/oauth/token
      redirect-uri: ${KAKAO_REDIRECT_URI}
    naver:
      client-id: ${NAVER_CLIENT_ID}
      client-secret: ${NAVER_CLIENT_SECRET}
      end-point: https://nid.naver.com/oauth2.0/authorize
      response-type: code
      access-type: ${NAVER_ACCESS_TYPE}
      scopes: ${NAVER_SCOPE}
      token-uri: https://nid.naver.com/oauth2.0/token
      redirect-uri: ${NAVER_REDIRECT_URI}

springdoc:
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8
  swagger-ui:
    url: /docs/open-api-3.0.1.yaml
    path: /swagger

jwt:
  secret-key:
    access-token: ${JWT_ACCESS_TOKEN_SECRET}
    refresh-token: ${JWT_REFRESH_TOKEN_SECRET}
  expiration-time:
    access-token: ${JWT_ACCESS_TOKEN_EXPIRATION}
    refresh-token: ${JWT_REFRESH_TOKEN_EXPIRATION}

cloud:
  aws:
    credentials:
      accessKey: ${AWS_ACCESS_KEY_ID}
      secretKey: ${AWS_SECRET_ACCESS_KEY}
    s3:
      endpoint: ${AWS_S3_END_POINT}
      bucket: ${AWS_SECRET_S3_BUCKET}
    region:
      static: ${AWS_SECRET_REGION_STATIC}
    stack:
      auto: false
